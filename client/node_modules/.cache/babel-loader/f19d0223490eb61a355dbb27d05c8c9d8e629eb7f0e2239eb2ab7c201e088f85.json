{"ast":null,"code":"var _jsxFileName = \"/Users/ahsan/Downloads/ecommerce-agentic-chatbot/client/src/components/ChatWidget.js\",\n  _s = $RefreshSig$();\n// Import React and its hooks for component state and lifecycle management\n// Import Font Awesome icons for the chat interface\n\nimport { useState, useEffect, useRef } from 'react';\nimport { FaRobot, FaPaperPlane, FaTimes, FaCommentDots } from 'react-icons/fa';\n\n// ChatWidget Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWidget = () => {\n  _s();\n  // State to track if chat window is open or closed\n  const [isOpen, setIsOpen] = useState(false);\n  // State to store all chat messages (array of message objects)\n  const [messages, setMessages] = useState([]);\n  // State to track current input field value\n  const [inputValue, setInputValue] = useState('');\n  // State to store conversation thread ID (null for new conversations)\n  const [threadId, setThreadId] = useState(null);\n  // Ref to reference the bottom of messages container for auto-scrolling\n  const messagesEndRef = useRef(null);\n\n  // Effect hook: Show initial greeting when chat is first opened\n  useEffect(() => {\n    // Only run if chat is open AND no messages exist yet\n    if (isOpen && messages.length === 0) {\n      // Create initial greeting message\n      const initialMessages = [{\n        text: \"Hello! I'm your shopping assistant. How can I help you today?\",\n        // Greeting text\n        isAgent: true // Flag to indicate this is from the AI agent\n      }];\n      // Add greeting to messages state\n      setMessages(initialMessages);\n    }\n  }, [isOpen, messages.length]); // Dependencies: re-run when isOpen or message count changes\n\n  // Effect hook: Auto-scroll to bottom when new messages are added\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Scroll the messages container to bottom smoothly\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]); // Dependency: re-run whenever messages array changes\n\n  // Function to toggle chat window open/closed\n  const toggleChat = () => {\n    // Flip the current isOpen state (true becomes false, false becomes true)\n    setIsOpen(!isOpen);\n  };\n\n  // Function to handle changes in the input field\n  const handleInputChange = e => {\n    // Update inputValue state with current text field value\n    setInputValue(e.target.value);\n  };\n\n  // Log messages to console for debugging purposes\n  console.log(messages);\n\n  // Function to send user message and get AI response\n  const handleSendMessage = async e => {\n    // Prevent default form submission behavior (page refresh)\n    e.preventDefault();\n    // Log user input for debugging\n    console.log(inputValue);\n\n    // Create message object for user's input\n    const message = {\n      text: inputValue,\n      // User's typed message\n      isAgent: false // Flag indicating this is from user, not AI\n    };\n\n    // Add user message to messages array using spread operator\n    setMessages(prevMessages => [...prevMessages, message]);\n    // Clear input field immediately after sending\n    setInputValue(\"\");\n\n    // Determine API endpoint: use existing thread if available, otherwise create new\n    const endpoint = threadId ? `http://localhost:8000/chat/${threadId}` : 'http://localhost:8000/chat';\n    try {\n      // Make HTTP POST request to backend API\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        // HTTP method\n        headers: {\n          'Content-Type': 'application/json' // Tell server we're sending JSON\n        },\n        body: JSON.stringify({\n          message: inputValue // Send user's message in request body\n        })\n      });\n\n      // Check if response status indicates success (200-299 range)\n      if (!response.ok) {\n        // Throw error if response status indicates failure\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Parse JSON response from server\n      const data = await response.json();\n      // Log successful response for debugging\n      console.log('Success:', data);\n\n      // Create message object for AI agent's response\n      const agentResponse = {\n        text: data.response,\n        // AI's response text\n        isAgent: true,\n        // Flag indicating this is from AI agent\n        threadId: data.threadId // Thread ID for conversation continuity\n      };\n\n      // Add AI response to messages array\n      setMessages(prevMessages => [...prevMessages, agentResponse]);\n      // Update thread ID for future messages in this conversation\n      setThreadId(data.threadId);\n      // Log updated messages for debugging\n      console.log(messages);\n    } catch (error) {\n      // Log any errors that occur during API call\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fixed bottom-6 right-6 z-50 transition-all duration-300 ease-in-out ${isOpen ? 'w-96 h-[500px]' : 'w-16 h-16'}`,\n    children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl shadow-2xl border border-gray-100 flex flex-col h-full overflow-hidden backdrop-blur-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-r from-purple-600 via-pink-500 to-red-500 text-white p-4 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-8 h-8 bg-white/20 rounded-full flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(FaRobot, {\n              className: \"text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold\",\n            children: \"AI Shop Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          className: \"text-white/80 hover:text-white transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto space-y-3\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${message.isAgent ? 'justify-start' : 'justify-end'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[80%] px-4 py-2 rounded-2xl text-sm ${message.isAgent ? 'bg-gray-100 text-gray-800 rounded-bl-md' : 'bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-br-md'}`,\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"p-4 border-t border-gray-100 flex gap-2\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-1 px-4 py-2 border border-gray-200 rounded-full outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\",\n          placeholder: \"Type your message...\",\n          value: inputValue,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: inputValue.trim() === '',\n          className: \"w-10 h-10 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-full flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed hover:shadow-lg transition-all\",\n          children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {\n            className: \"text-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleChat,\n      className: \"w-16 h-16 bg-gradient-to-r from-purple-600 via-pink-500 to-red-500 text-white rounded-full shadow-2xl hover:shadow-purple-500/25 hover:scale-110 transition-all duration-300 flex items-center justify-center group\",\n      children: /*#__PURE__*/_jsxDEV(FaCommentDots, {\n        className: \"text-xl group-hover:animate-pulse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n// Export component as default export\n_s(ChatWidget, \"DHXUkHhoYyoC7iXdxGUU969D4Go=\");\n_c = ChatWidget;\nexport default ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["useState","useEffect","useRef","FaRobot","FaPaperPlane","FaTimes","FaCommentDots","jsxDEV","_jsxDEV","ChatWidget","_s","isOpen","setIsOpen","messages","setMessages","inputValue","setInputValue","threadId","setThreadId","messagesEndRef","length","initialMessages","text","isAgent","_messagesEndRef$curre","current","scrollIntoView","behavior","toggleChat","handleInputChange","e","target","value","console","log","handleSendMessage","preventDefault","message","prevMessages","endpoint","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","agentResponse","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","ref","onSubmit","type","placeholder","onChange","disabled","trim","_c","$RefreshReg$"],"sources":["/Users/ahsan/Downloads/ecommerce-agentic-chatbot/client/src/components/ChatWidget.js"],"sourcesContent":["// Import React and its hooks for component state and lifecycle management\n// Import Font Awesome icons for the chat interface\n\nimport { useState, useEffect, useRef } from 'react'\nimport { FaRobot, FaPaperPlane, FaTimes, FaCommentDots } from 'react-icons/fa'\n\n// ChatWidget Component\nconst ChatWidget = () => {\n  // State to track if chat window is open or closed\n  const [isOpen, setIsOpen] = useState(false)\n  // State to store all chat messages (array of message objects)\n  const [messages, setMessages] = useState([])\n  // State to track current input field value\n  const [inputValue, setInputValue] = useState('')\n  // State to store conversation thread ID (null for new conversations)\n  const [threadId, setThreadId] = useState(null)\n  // Ref to reference the bottom of messages container for auto-scrolling\n  const messagesEndRef = useRef(null)\n\n  // Effect hook: Show initial greeting when chat is first opened\n  useEffect(() => {\n    // Only run if chat is open AND no messages exist yet\n    if (isOpen && messages.length === 0) {\n      // Create initial greeting message\n      const initialMessages = [\n        {\n          text: \"Hello! I'm your shopping assistant. How can I help you today?\", // Greeting text\n          isAgent: true // Flag to indicate this is from the AI agent\n        }\n      ]\n      // Add greeting to messages state\n      setMessages(initialMessages)\n    }\n  }, [isOpen, messages.length]) // Dependencies: re-run when isOpen or message count changes\n\n  // Effect hook: Auto-scroll to bottom when new messages are added\n  useEffect(() => {\n    // Scroll the messages container to bottom smoothly\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }, [messages]) // Dependency: re-run whenever messages array changes\n\n  // Function to toggle chat window open/closed\n  const toggleChat = () => {\n    // Flip the current isOpen state (true becomes false, false becomes true)\n    setIsOpen(!isOpen)\n  }\n\n  // Function to handle changes in the input field\n  const handleInputChange = (e) => {\n    // Update inputValue state with current text field value\n    setInputValue(e.target.value)\n  }\n\n  // Log messages to console for debugging purposes\n  console.log(messages)\n  \n  // Function to send user message and get AI response\n  const handleSendMessage = async (e) => {\n    // Prevent default form submission behavior (page refresh)\n    e.preventDefault()\n    // Log user input for debugging\n    console.log(inputValue)\n\n    // Create message object for user's input\n    const message = {\n      text: inputValue,  // User's typed message\n      isAgent: false,    // Flag indicating this is from user, not AI\n    }\n\n    // Add user message to messages array using spread operator\n    setMessages(prevMessages => [...prevMessages, message])\n    // Clear input field immediately after sending\n    setInputValue(\"\")\n\n    // Determine API endpoint: use existing thread if available, otherwise create new\n    const endpoint = threadId ? `http://localhost:8000/chat/${threadId}` : 'http://localhost:8000/chat'\n\n    try {\n      // Make HTTP POST request to backend API\n      const response = await fetch(endpoint, {\n        method: 'POST', // HTTP method\n        headers: {\n          'Content-Type': 'application/json', // Tell server we're sending JSON\n        },\n        body: JSON.stringify({\n          message: inputValue // Send user's message in request body\n        }),\n      })\n\n      // Check if response status indicates success (200-299 range)\n      if (!response.ok) {\n        // Throw error if response status indicates failure\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      // Parse JSON response from server\n      const data = await response.json()\n      // Log successful response for debugging\n      console.log('Success:', data)\n      \n      // Create message object for AI agent's response\n      const agentResponse = {\n        text: data.response,    // AI's response text\n        isAgent: true,          // Flag indicating this is from AI agent\n        threadId: data.threadId // Thread ID for conversation continuity\n      }\n      \n      // Add AI response to messages array\n      setMessages(prevMessages => [...prevMessages, agentResponse])\n      // Update thread ID for future messages in this conversation\n      setThreadId(data.threadId)\n      // Log updated messages for debugging\n      console.log(messages)\n    } catch (error) {\n      // Log any errors that occur during API call\n      console.error('Error:', error)\n    }\n  }\n\n\n  return (\n    <div className={`fixed bottom-6 right-6 z-50 transition-all duration-300 ease-in-out ${isOpen ? 'w-96 h-[500px]' : 'w-16 h-16'}`}>\n      {isOpen ? (\n        <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-100 flex flex-col h-full overflow-hidden backdrop-blur-xl\">\n          <div className=\"bg-gradient-to-r from-purple-600 via-pink-500 to-red-500 text-white p-4 flex justify-between items-center\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-8 h-8 bg-white/20 rounded-full flex items-center justify-center\">\n                <FaRobot className=\"text-sm\" />\n              </div>\n              <h3 className=\"font-semibold\">AI Shop Assistant</h3>\n            </div>\n            <button onClick={toggleChat} className=\"text-white/80 hover:text-white transition-colors\">\n              <FaTimes />\n            </button>\n          </div>\n\n          <div className=\"flex-1 p-4 overflow-y-auto space-y-3\">\n            {messages.map((message, index) => (\n              <div key={index} className={`flex ${message.isAgent ? 'justify-start' : 'justify-end'}`}>\n                <div className={`max-w-[80%] px-4 py-2 rounded-2xl text-sm ${\n                  message.isAgent \n                    ? 'bg-gray-100 text-gray-800 rounded-bl-md' \n                    : 'bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-br-md'\n                }`}>\n                  {message.text}\n                </div>\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n\n          <form className=\"p-4 border-t border-gray-100 flex gap-2\" onSubmit={handleSendMessage}>\n            <input\n              type=\"text\"\n              className=\"flex-1 px-4 py-2 border border-gray-200 rounded-full outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n              placeholder=\"Type your message...\"\n              value={inputValue}\n              onChange={handleInputChange}\n            />\n            <button\n              type=\"submit\"\n              disabled={inputValue.trim() === ''}\n              className=\"w-10 h-10 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-full flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed hover:shadow-lg transition-all\"\n            >\n              <FaPaperPlane className=\"text-sm\" />\n            </button>\n          </form>\n        </div>\n      ) : (\n        <button\n          onClick={toggleChat}\n          className=\"w-16 h-16 bg-gradient-to-r from-purple-600 via-pink-500 to-red-500 text-white rounded-full shadow-2xl hover:shadow-purple-500/25 hover:scale-110 transition-all duration-300 flex items-center justify-center group\"\n        >\n          <FaCommentDots className=\"text-xl group-hover:animate-pulse\" />\n        </button>\n      )}\n    </div>\n  )\n}\n\n// Export component as default export\nexport default ChatWidget"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}